{"version":3,"file":"static/js/247.0b449e87.chunk.js","mappings":"sUAEMA,EAAW,gCACXC,EAAU,mCACVC,EAAkB,kCAIlBC,EAAiB,mCAAG,6FAChBC,EADgB,UACPJ,EADO,sCAC+BC,GAD/B,SAECI,EAAAA,GAAAA,IAAUD,GAFX,cAEhBE,EAFgB,yBAGfA,GAHe,2CAAH,qDAMjBC,EAAe,mCAAG,WAAOC,GAAP,gFACdJ,EADc,UACLJ,EADK,gCAC2BC,EAD3B,iCAC2DO,EAD3D,iCAEGH,EAAAA,GAAAA,IAAUD,GAFb,cAEdE,EAFc,yBAGbA,GAHa,2CAAH,sDAMfG,EAAY,mCAAG,WAAOC,GAAP,gFACXN,EADW,UACFJ,EADE,iBACeU,EADf,oBAC6BT,EAD7B,4BAEMI,EAAAA,GAAAA,IAAUD,GAFhB,cAEXE,EAFW,yBAGVA,GAHU,2CAAH,sDAMZK,EAAY,mCAAG,WAAOD,GAAP,gFACXN,EADW,UACFJ,EADE,iBACeU,EADf,4BACqCT,EADrC,4BAEMI,EAAAA,GAAAA,IAAUD,GAFhB,cAEXE,EAFW,yBAGVA,GAHU,2CAAH,sDAMZM,EAAe,mCAAG,WAAOF,GAAP,gFACdN,EADc,UACLJ,EADK,iBACYU,EADZ,4BACkCT,EADlC,4BAEGI,EAAAA,GAAAA,IAAUD,GAFb,cAEdE,EAFc,yBAGbA,GAHa,2CAAH,qD,oHCzBN,SAASO,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQV,GAAOW,EAAAA,EAAAA,MAAPX,GAkBR,IAhBAY,EAAAA,EAAAA,YAAU,WAEFJ,GAAa,IAEbP,EAAAA,EAAAA,IAAaD,GACRa,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLR,EAAQQ,EAAKT,KAChB,IACAU,OAAM,SAACC,GAAD,OAAcN,EAASM,EAAvB,IACNC,QAAQT,GAAa,GAKjC,GAAE,CAACR,IAECK,EAIL,OACI,gCACKE,IAAa,sCACbE,IAAS,yDACO,IAAhBJ,EAAKa,QAAe,yDAAsC,wBACtDb,EAAKc,KAAI,YAA4C,IAAzCnB,EAAwC,EAAxCA,GAAIoB,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC9B,OACA,0BACsB,OAAjBA,GAAwB,gBAAKC,IAAI,gCAAgCC,IAAI,UAAY,gBAAKD,IAAK/B,EAAAA,GAAkB8B,EAAcE,IAAKH,EAAMI,OAAO,WAC9I,uBAAIJ,KACJ,uCAAeD,OAHVpB,EAKZ,QAMhB,C","sources":["api/moviesAPI.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e3f9ac8b4c25ea958657e460a35663f5';\nconst IMAGES_BASE_URL = \"https://image.tmdb.org/t/p/w342\";\n\n\n\nconst getTrendingMovies = async () => {\n    const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response;\n};\n\nconst getMoviesByName = async (query) => {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`;\n    const response = await axios.get(url);\n    return response;\n};\n\nconst getMovieById = async (id) => {\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response;\n};\n\nconst getMovieCast = async (id) => {\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response;\n};\n\nconst getMovieReviews = async (id) => {\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response;\n};\n\n\n\nexport { getTrendingMovies, getMoviesByName, getMovieById, getMovieCast, getMovieReviews, IMAGES_BASE_URL };  ","import { getMovieCast } from \"api/moviesAPI\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { IMAGES_BASE_URL } from \"api/moviesAPI\";\n\n\nexport default function Cast() {\n    const [cast, setCast] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchCast = () => {\n            setIsLoading(true);\n\n            getMovieCast(id)\n                .then(({ data }) => {\n                    setCast(data.cast);\n                })\n                .catch((newError) => setError(newError))\n                .finally(setIsLoading(false));\n        };\n\n        fetchCast();\n        \n    }, [id]);\n\n    if (!cast) {\n        return\n    };\n    \n    return (\n        <>\n            {isLoading && <p>Loading...</p>}\n            {error && <p>Ops, something whent wrong...</p>}\n            {cast.length === 0 ? <p>There is no cast information</p> : <ul>\n                {cast.map(({ id, character, name, profile_path }) => {\n                    return (\n                    <li key={id}>\n                        {profile_path === null ? <img src=\"http://dummyimage.com/100x150\" alt=\"foto\" /> : <img src={IMAGES_BASE_URL + profile_path} alt={name} height=\"150px\" />}\n                        <p>{name}</p>\n                        <p>Character: {character}</p>\n                        </li>)\n                })\n                }\n            </ul>}\n        </>\n        \n    )\n}\n"],"names":["BASE_URL","API_KEY","IMAGES_BASE_URL","getTrendingMovies","url","axios","response","getMoviesByName","query","getMovieById","id","getMovieCast","getMovieReviews","Cast","useState","cast","setCast","isLoading","setIsLoading","error","setError","useParams","useEffect","then","data","catch","newError","finally","length","map","character","name","profile_path","src","alt","height"],"sourceRoot":""}