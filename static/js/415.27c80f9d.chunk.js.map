{"version":3,"file":"static/js/415.27c80f9d.chunk.js","mappings":"sUAEMA,EAAW,gCACXC,EAAU,mCACVC,EAAkB,kCAIlBC,EAAiB,mCAAG,6FAChBC,EADgB,UACPJ,EADO,sCAC+BC,GAD/B,SAECI,EAAAA,GAAAA,IAAUD,GAFX,cAEhBE,EAFgB,yBAGfA,GAHe,2CAAH,qDAMjBC,EAAe,mCAAG,WAAOC,GAAP,gFACdJ,EADc,UACLJ,EADK,gCAC2BC,EAD3B,iCAC2DO,EAD3D,iCAEGH,EAAAA,GAAAA,IAAUD,GAFb,cAEdE,EAFc,yBAGbA,GAHa,2CAAH,sDAMfG,EAAY,mCAAG,WAAOC,GAAP,gFACXN,EADW,UACFJ,EADE,iBACeU,EADf,oBAC6BT,EAD7B,4BAEMI,EAAAA,GAAAA,IAAUD,GAFhB,cAEXE,EAFW,yBAGVA,GAHU,2CAAH,sDAMZK,EAAY,mCAAG,WAAOD,GAAP,gFACXN,EADW,UACFJ,EADE,iBACeU,EADf,4BACqCT,EADrC,4BAEMI,EAAAA,GAAAA,IAAUD,GAFhB,cAEXE,EAFW,yBAGVA,GAHU,2CAAH,sDAMZM,EAAe,mCAAG,WAAOF,GAAP,gFACdN,EADc,UACLJ,EADK,iBACYU,EADZ,4BACkCT,EADlC,4BAEGI,EAAAA,GAAAA,IAAUD,GAFb,cAEdE,EAFc,yBAGbA,GAHa,2CAAH,qD,4CCPrB,IArBmB,SAAC,GAAuB,IAArBO,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAE1B,OACI,wBACKD,EAAOE,KAAI,YAAkB,IAAhBL,EAAe,EAAfA,GAAIM,EAAW,EAAXA,MACd,OAAO,yBACH,SAAC,KAAD,CAAMC,GAAE,kBAAaP,GAAMI,MAAOA,EAAlC,SAA2CE,KAD/BN,EAGnB,KAGZ,C,uFCuBD,UAjCa,WACT,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WAGFL,GAAa,IAEblB,EAAAA,EAAAA,MAAoBwB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACxBT,EAAUS,EAAKC,QAClB,IAAEC,OAAM,SAAAC,GACLR,EAASQ,EAASC,QACrB,IAAEC,QAAQZ,GAAa,GAK/B,GAAE,KAGC,6BACI,2CACCD,IAAa,sCACbE,IAAS,uDACTT,EAAOqB,OAAS,IAAK,SAAC,IAAD,CAAYrB,OAAQA,EAAQC,MAAO,CAAEqB,KAAMX,OAI5E,C","sources":["api/moviesAPI.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e3f9ac8b4c25ea958657e460a35663f5';\nconst IMAGES_BASE_URL = \"https://image.tmdb.org/t/p/w342\";\n\n\n\nconst getTrendingMovies = async () => {\n    const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response;\n};\n\nconst getMoviesByName = async (query) => {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`;\n    const response = await axios.get(url);\n    return response;\n};\n\nconst getMovieById = async (id) => {\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response;\n};\n\nconst getMovieCast = async (id) => {\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response;\n};\n\nconst getMovieReviews = async (id) => {\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response;\n};\n\n\n\nexport { getTrendingMovies, getMoviesByName, getMovieById, getMovieCast, getMovieReviews, IMAGES_BASE_URL };  ","import { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n\nconst MoviesList = ({ movies, state }) => {\n    \n    return (\n        <ul>\n            {movies.map(({id, title}) => {\n                return <li key={id}>\n                    <Link to={`/movies/${id}`} state={state} >{title}</Link>\n                </li>;\n            })}\n        </ul>\n    )\n};\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired\n    })),\n    state: PropTypes.object.isRequired\n}\n\nexport default MoviesList;\n","import { useState, useEffect } from \"react\";\nimport { getTrendingMovies } from \"api/moviesAPI\";\nimport { useLocation } from \"react-router-dom\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\n    \nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        \n        const getMovies = () => {\n            setIsLoading(true);\n\n            getTrendingMovies().then(({ data }) => {\n                setMovies(data.results);\n            }).catch(newError => {\n                setError(newError.message);\n            }).finally(setIsLoading(false));\n        };\n\n        getMovies();\n        \n    }, [])\n\n    return (\n        <main>\n            <h1>Trending today</h1>\n            {isLoading && <p>Loading...</p>}\n            {error && <p>\"Please try again later...\"</p>}\n            {movies.length > 0 && <MoviesList movies={movies} state={{ from: location}} />}\n        </main>\n\n    )\n};\n\nexport default Home;"],"names":["BASE_URL","API_KEY","IMAGES_BASE_URL","getTrendingMovies","url","axios","response","getMoviesByName","query","getMovieById","id","getMovieCast","getMovieReviews","movies","state","map","title","to","useState","setMovies","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","then","data","results","catch","newError","message","finally","length","from"],"sourceRoot":""}